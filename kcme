#!/usr/bin/env python3
import os, sys, shutil, math
from pathlib import Path

GREEN = "\033[32m"
RESET = "\033[0m"

def list_ccache_files():
    return sorted([f for f in os.listdir('.') if f.endswith('.ccache')])

def check_zshrc():
    zshrc_path = Path.home() / '.zshrc'
    if zshrc_path.exists():
        with open(zshrc_path) as f:
            content = f.read()
            return 'readonly KRB5CCNAME=/tmp/krb5cc_1000' in content
    return False

def install_krb5ccname():
    zshrc_path = Path.home() / '.zshrc'
    response = input("Do you want to install readonly KRB5CCNAME=/tmp/krb5cc_1000 in ~/.zshrc? (y/n): ").strip().lower()
    if response == 'y':
        lines_to_add = 'readonly KRB5CCNAME=/tmp/krb5cc_1000\nexport KRB5CCNAME\n'
        if zshrc_path.exists():
            with open(zshrc_path, 'r') as f:
                content = f.read()
            with open(zshrc_path, 'w') as f:
                f.write(lines_to_add + content)
        else:
            with open(zshrc_path, 'w') as f:
                f.write(lines_to_add)
        print("KRB5CCNAME configuration added to ~/.zshrc")
        return True
    return False

def draw_armed_box(stdscr, y, title, subtitle):
    h, w = stdscr.getmaxyx()
    inner_w = max(len(title), len(subtitle)) + 2
    total_box_w = inner_w + 2
    arms_total = max(0, w - total_box_w)
    left_arms = arms_total // 2
    right_arms = arms_total - left_arms
    stdscr.addnstr(y + 0, 0, (" " * left_arms) + "┌" + ("─" * inner_w) + "┐" + (" " * right_arms), w)
    stdscr.addnstr(y + 1, 0, ("─" * left_arms) + "│" + (" " + title.center(inner_w - 2) + " ") + "│" + ("─" * right_arms), w)
    stdscr.addnstr(y + 2, 0, ("─" * left_arms) + "│" + (" " + subtitle.center(inner_w - 2) + " ") + "│" + ("─" * right_arms), w)
    stdscr.addnstr(y + 3, 0, (" " * left_arms) + "└" + ("─" * inner_w) + "┘" + (" " * right_arms), w)

def get_input(files):
    import curses
    def curses_menu(stdscr):
        curses.curs_set(0)
        idx = 0
        while True:
            stdscr.clear()
            h, w = stdscr.getmaxyx()
            draw_armed_box(stdscr, 0, "Kerberos Negotiation Management Menu", "by DaddyBigFish")
            n = len(files)
            top = 5
            avail_rows = max(1, h - top - 1)
            numw = len(str(n))
            min_col_width = numw + 3 + 8
            maxcols = max(1, (w - 2) // min_col_width)
            cols = max(1, min(maxcols, math.ceil(n / avail_rows)))
            rows = max(1, math.ceil(n / cols))
            col_width = max(min_col_width, (w - 2) // cols)
            for i, f in enumerate(files):
                r = i % rows
                c = i // rows
                y = top + r
                x = 1 + c * col_width
                if y >= h - 1 or x >= w - 1:
                    continue
                name = f[:-7] if f.endswith('.ccache') else f
                trunc_w = max(1, col_width - (numw + 3))
                if len(name) > trunc_w:
                    name = name[:max(1, trunc_w - 1)] + "…"
                pre = "=> " if i == idx else "   "
                line = f"{pre}{str(i+1).rjust(numw)}. {name}"
                attr = curses.A_REVERSE if i == idx else curses.A_NORMAL
                stdscr.addnstr(y, x, line, max(0, w - x - 1), attr)
            stdscr.refresh()
            k = stdscr.getch()
            if k in (curses.KEY_UP, ord('k')):
                idx = (idx - 1) % n
            elif k in (curses.KEY_DOWN, ord('j')):
                idx = (idx + 1) % n
            elif k in (curses.KEY_LEFT, ord('h')):
                idx = (idx - rows) % n
            elif k in (curses.KEY_RIGHT, ord('l')):
                idx = (idx + rows) % n
            elif k in (10, 13):
                return str(idx + 1)
            elif k in (27, ord('q')):
                return None
            elif 48 <= k <= 57:
                num = k - 48
                if num == 0:
                    return None
                if 1 <= num <= n:
                    return str(num)
    try:
        return curses.wrapper(curses_menu)
    except KeyboardInterrupt:
        sys.exit(0)

def main():
    if not check_zshrc():
        if not install_krb5ccname():
            print("readonly KRB5CCNAME not found in ~/.zshrc and not installed. Exiting.")
            sys.exit(1)
    files = list_ccache_files()
    if not files:
        print("Sorry, no user .ccache were found in the current directory.")
        sys.exit(1)
    choice = get_input(files)
    if not choice:
        sys.exit(0)
    if not choice.isdigit() or not (1 <= int(choice) <= len(files)):
        print("Sorry, that's an invalid choice, try again.")
        sys.exit(1)
    src = Path(files[int(choice)-1])
    dst = Path("/tmp/krb5cc_1000")
    shutil.copy2(src, dst)
    print(f"Now using Kerberos negotiation as {GREEN}{src.stem}{RESET}!")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        sys.exit(0)
